{"ast":null,"code":"import _classCallCheck from \"C:/Repos/datingApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Repos/datingApp/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ReplaySubject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AccountService = /*#__PURE__*/(function () {\n  var AccountService = /*#__PURE__*/function () {\n    function AccountService(http) {\n      _classCallCheck(this, AccountService);\n\n      this.http = http;\n      this.baseUrl = \"https://localhost:5001/api/\";\n      this.currentUserSource = new ReplaySubject(1);\n      this.currentUser$ = this.currentUserSource.asObservable();\n    }\n\n    _createClass(AccountService, [{\n      key: \"login\",\n      value: function login(model) {\n        var _this = this;\n\n        return this.http.post(this.baseUrl + \"account/login\", model).pipe(map(function (response) {\n          var user = response;\n\n          if (user) {\n            localStorage.setItem(\"user\", JSON.stringify(user));\n\n            _this.currentUserSource.next(user);\n          }\n        }));\n      }\n    }, {\n      key: \"register\",\n      value: function register(model) {\n        var _this2 = this;\n\n        return this.http.post(this.baseUrl + \"account/register\", model).pipe(map(function (user) {\n          if (user) {\n            localStorage.setItem(\"user\", JSON.stringify(user));\n\n            _this2.currentUserSource.next(user);\n          }\n\n          return user;\n        }));\n      }\n    }, {\n      key: \"setCurrentUser\",\n      value: function setCurrentUser(user) {\n        this.currentUserSource.next(user);\n      }\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        localStorage.removeItem(\"user\");\n        this.currentUserSource.next(null);\n      }\n    }]);\n\n    return AccountService;\n  }();\n\n  AccountService.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: \"root\"\n  });\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module"}