{"ast":null,"code":"import _classCallCheck from \"C:/Repos/datingApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Repos/datingApp/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { catchError, throwError } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nexport var ErrorInterceptor = /*#__PURE__*/(function () {\n  var ErrorInterceptor = /*#__PURE__*/function () {\n    function ErrorInterceptor(router, toastr) {\n      _classCallCheck(this, ErrorInterceptor);\n\n      this.router = router;\n      this.toastr = toastr;\n    }\n\n    _createClass(ErrorInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(request, next) {\n        var _this = this;\n\n        return next.handle(request).pipe(catchError(function (error) {\n          if (error) {\n            switch (error.status) {\n              case 400:\n                if (error.error.errors) {\n                  var modalStateErrors = [];\n\n                  for (var key in error.error.errors) {\n                    if (error.error.errors[key]) {\n                      modalStateErrors.push(error.error.errors[key]);\n                    }\n                  }\n\n                  throw modalStateErrors.flat();\n                } else {\n                  error.statusText = \"Bad Request\";\n\n                  _this.toastr.error(error.statusText, error.status);\n                }\n\n                break;\n\n              case 401:\n                error.statusText = \"Unauthorized\";\n\n                _this.toastr.error(error.statusText, error.status);\n\n                break;\n\n              case 404:\n                _this.router.navigateByUrl(\"/not-found\");\n\n                break;\n\n              case 500:\n                var navigationExtras = {\n                  state: {\n                    error: error.error\n                  }\n                };\n\n                _this.router.navigateByUrl(\"/server-error\", navigationExtras);\n\n                break;\n\n              default:\n                _this.toastr.error(\"Something unexpected went wrong\");\n\n                console.log(error);\n                break;\n            }\n          }\n\n          console.log(error);\n          return throwError(function () {\n            return new Error(error.error);\n          });\n        }));\n      }\n    }]);\n\n    return ErrorInterceptor;\n  }();\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}